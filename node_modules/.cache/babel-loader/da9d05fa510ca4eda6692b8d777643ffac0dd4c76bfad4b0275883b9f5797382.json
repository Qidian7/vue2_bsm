{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 把正则判定拉出去放到utils里面封装\nimport { nameRule, pwdRule } from \"../utils/validate.js\";\nimport { setToken } from \"../utils/setToken.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\"\n      },\n      rules: {\n        username: [\n        //新方法 自定义校验规则\n        {\n          required: true,\n          validator: nameRule,\n          trigger: \"blur\"\n        }\n        //旧方法\n        //   { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n        //   { min: 6, max: 10, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n\n        password: [\n        //新方法 自定义校验规则\n        {\n          required: true,\n          validator: pwdRule,\n          trigger: \"blur\"\n        }\n        //旧方法\n        //   { required: true, message: \"请输入密码\", trigger: \"blur\" },\n        //   { min: 6, max: 12, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ]\n      }\n    };\n  },\n\n  methods: {\n    login(form) {\n      this.$refs[form].validate(valid => {\n        if (valid) {\n          console.log(this.form);\n          this.service.post(\"/login\", this.form).then(res => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({\n                message: res.data.message,\n                type: \"success\"\n              });\n              this.$router.push(\"/home\");\n            }\n            // console.log(res);\n          });\n        } else {\n          console.error(this.form);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["nameRule","pwdRule","setToken","name","data","form","username","password","rules","required","validator","trigger","methods","login","$refs","validate","valid","console","log","service","post","then","res","status","token","$message","message","type","$router","push","error"],"sources":["src/components/Login.vue"],"sourcesContent":["<!-- 登录页面注重的是表单的提交 -->\n<template>\n  <div class=\"login\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>后台管理系统</span>\n      </div>\n      <el-form label-width=\"80px\" :model=\"form\" ref=\"form\" :rules=\"rules\">\n        <!-- prop用来表单验证 -->\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input type=\"password\" v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"login('form')\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\n// 把正则判定拉出去放到utils里面封装\nimport { nameRule, pwdRule } from \"../utils/validate.js\";\nimport { setToken } from \"../utils/setToken.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: \"\",\n        password: \"\",\n      },\n      rules: {\n        username: [\n          //新方法 自定义校验规则\n          { required: true, validator: nameRule, trigger: \"blur\" },\n          //旧方法\n          //   { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n          //   { min: 6, max: 10, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n        password: [\n          //新方法 自定义校验规则\n          { required: true, validator: pwdRule, trigger: \"blur\" },\n          //旧方法\n          //   { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          //   { min: 6, max: 12, message: \"长度在6-10位字符之间\", trigger: \"blur\" },\n        ],\n      },\n    };\n  },\n  methods: {\n    login(form) {\n      this.$refs[form].validate((valid) => {\n        if (valid) {\n          console.log(this.form);\n          this.service.post(\"/login\", this.form).then((res) => {\n            if (res.status === 200) {\n              setToken(\"username\", res.data.username);\n              setToken(\"token\", res.data.token);\n              this.$message({ message: res.data.message, type: \"success\" });\n              this.$router.push(\"/home\");\n            }\n            // console.log(res);\n          });\n        } else {\n          console.error(this.form);\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.login {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  //   background-color: #409eff;\n  background-image: url(../assets/pic/bg1.jpeg);\n  background-size: 100%;\n  .box-card {\n    width: 450px;\n    margin: 200px auto;\n    opacity: 0.78;\n    .clearfix {\n      font-size: 36px;\n      text-align: center;\n    }\n    .el-button {\n      width: 50%;\n      transform: translateX(50px);\n    }\n  }\n}\n</style>\n"],"mappings":";AAwBA;AACA,SAAAA,QAAA,EAAAC,OAAA;AACA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA;QACA;QACA;UAAAG,QAAA;UAAAC,SAAA,EAAAV,QAAA;UAAAW,OAAA;QAAA;QACA;QACA;QACA;QAAA,CACA;;QACAJ,QAAA;QACA;QACA;UAAAE,QAAA;UAAAC,SAAA,EAAAT,OAAA;UAAAU,OAAA;QAAA;QACA;QACA;QACA;QAAA;MAEA;IACA;EACA;;EACAC,OAAA;IACAC,MAAAR,IAAA;MACA,KAAAS,KAAA,CAAAT,IAAA,EAAAU,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,OAAA,CAAAC,GAAA,MAAAb,IAAA;UACA,KAAAc,OAAA,CAAAC,IAAA,gBAAAf,IAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,MAAA;cACArB,QAAA,aAAAoB,GAAA,CAAAlB,IAAA,CAAAE,QAAA;cACAJ,QAAA,UAAAoB,GAAA,CAAAlB,IAAA,CAAAoB,KAAA;cACA,KAAAC,QAAA;gBAAAC,OAAA,EAAAJ,GAAA,CAAAlB,IAAA,CAAAsB,OAAA;gBAAAC,IAAA;cAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;YACA;UACA;QACA;UACAZ,OAAA,CAAAa,KAAA,MAAAzB,IAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}