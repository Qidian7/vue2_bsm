{"ast":null,"code":"import { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nexport function mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n  return operate(function (source, subscriber) {\n    var state = seed;\n    return mergeInternals(source, subscriber, function (value, index) {\n      return accumulator(state, value, index);\n    }, concurrent, function (value) {\n      state = value;\n    }, false, undefined, function () {\n      return state = null;\n    });\n  });\n}","map":{"version":3,"names":["operate","mergeInternals","mergeScan","accumulator","seed","concurrent","Infinity","source","subscriber","state","value","index","undefined"],"sources":["../../../../src/internal/operators/mergeScan.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,cAAc,QAAQ,kBAAkB;AAoEjD,OAAM,SAAUC,SAASA,CACvBC,WAAoE,EACpEC,IAAO,EACPC,UAAqB;EAArB,IAAAA,UAAA;IAAAA,UAAA,GAAAC,QAAqB;EAAA;EAErB,OAAON,OAAO,CAAC,UAACO,MAAM,EAAEC,UAAU;IAEhC,IAAIC,KAAK,GAAGL,IAAI;IAEhB,OAAOH,cAAc,CACnBM,MAAM,EACNC,UAAU,EACV,UAACE,KAAK,EAAEC,KAAK;MAAK,OAAAR,WAAW,CAACM,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC;IAAhC,CAAgC,EAClDN,UAAU,EACV,UAACK,KAAK;MACJD,KAAK,GAAGC,KAAK;IACf,CAAC,EACD,KAAK,EACLE,SAAS,EACT;MAAM,OAACH,KAAK,GAAG,IAAK;IAAd,CAAe,CACtB;EACH,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}