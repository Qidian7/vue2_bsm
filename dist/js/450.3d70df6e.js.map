{"version":3,"file":"js/450.3d70df6e.js","mappings":"4JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,UAAU,CAACA,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,aAAaH,EAAG,UAAU,CAACA,EAAG,MAAM,CAACG,MAAM,CAAC,GAAK,cAAc,EACzM,EACIC,EAAkB,G,WCWtB,GACAC,KAAA,WACAC,OACA,QACA,EACAC,WAEAC,EAAAA,EAAAA,MACAC,MAAAC,IAEA,GADAC,QAAAC,IAAAF,GACA,MAAAA,EAAAG,OAAA,CACA,WAAAC,EAAA,MAAAC,EAAA,OAAAC,GAAAN,EAAAJ,KAAAA,KACA,KAAAW,KAAAH,EAAAC,EAAAC,EACA,KAEAE,OAAAC,IACA,MAAAA,CAAA,GAEA,EAEAC,UAEA,IAAAC,EAAA,KAAAC,SAAAC,KAAAC,SAAAC,eAAA,UACAJ,EAAAK,UAAA,CACAC,MAAA,CACAC,KAAA,WAEAC,QAAA,GACAd,MAAA,CACAT,KAAA,6CAEAwB,MAAA,GAEAd,OAAA,CACA,CACAX,KAAA,KAEA0B,KAAA,MACAzB,KAAA,qBAIA,EACA0B,QAAA,CACAf,KAAAH,EAAAC,EAAAC,GACA,IAAAiB,EAAA,KAAAX,SAAAC,KAAAC,SAAAC,eAAA,UACAS,EAAA,CACAP,MAAA,CACAC,KAAA,OAEAO,QAAA,CACAC,QAAA,QAEAtB,OAAA,CACAR,KAAAQ,GAEAC,MAAA,CACAgB,KAAA,WACAzB,KAAAS,GAEAe,MAAA,CACAC,KAAA,SAEAf,UAEAiB,EAAAP,UAAAQ,EACA,IC/EiQ,I,UCQ7PG,GAAY,OACd,EACAxC,EACAO,GACA,EACA,KACA,WACA,MAIF,EAAeiC,EAAiB,O,oQCdzB,SAASC,EAAMhC,GACpB,OAAOiC,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,OACRC,IAAK,SACLnC,KAAMA,GAEV,CAEO,SAASoC,EAASC,GACvB,OAAOJ,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,YACLE,OAAQA,GAEZ,CAGO,SAASC,EAAcC,GAC5B,OAAON,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,SACRC,IAAM,aAAYI,KAEtB,CAcO,SAASC,EAAKf,EAAMzB,GACzBA,EAAOyC,IAAAA,UAAazC,GACpB,IAAI0C,EAAM,CAAER,OAAQT,EAAMU,IAAK,QAASnC,QACxC,OAAOiC,EAAAA,EAAAA,GAAQS,EACjB,CAaO,SAASC,IACd,OAAOV,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,SAET,CAGO,SAASS,EAAWL,GACzB,OAAON,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,SACRC,IAAM,SAAQI,KAElB,CAYO,SAASrC,IACd,OAAO+B,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,YAET,CAGO,SAASU,IACd,OAAOZ,EAAAA,EAAAA,GAAQ,CACbC,OAAQ,MACRC,IAAK,WAET,C","sources":["webpack://vue2_bsm/./src/components/DataAnalysis/DataView.vue","webpack://vue2_bsm/src/components/DataAnalysis/DataView.vue","webpack://vue2_bsm/./src/components/DataAnalysis/DataView.vue?911d","webpack://vue2_bsm/./src/components/DataAnalysis/DataView.vue?b83c","webpack://vue2_bsm/./src/api/api.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"dataView\"},[_c('el-card',[_c('div',{attrs:{\"id\":\"main1\"}})]),_c('el-card',[_c('div',{attrs:{\"id\":\"main2\"}})])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"dataView\">\n    <el-card>\n      <div id=\"main1\"></div>\n    </el-card>\n    <el-card>\n      <div id=\"main2\"></div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { dataView } from \"@/api/api\";\nexport default {\n  name: \"DataView\",\n  data() {\n    return {};\n  },\n  created() {\n    // 第二个图标的绘制\n    dataView()\n      .then((res) => {\n        console.log(res);\n        if (res.status === 200) {\n          let { legend, xAxis, series } = res.data.data;\n          this.draw(legend, xAxis, series);\n        }\n      })\n      .catch((err) => {\n        throw err;\n      });\n  },\n  // 在mounted中绘制图表\n  mounted() {\n    // 首先初始化echarts图表\n    let myChart = this.$echarts.init(document.getElementById(\"main1\"));\n    myChart.setOption({\n      title: {\n        text: \"课题组人数分布\",\n      },\n      tooltip: {}, // 鼠标放上去有对应提示\n      xAxis: {\n        data: [\"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"],\n      },\n      yAxis: {},\n      // 数据配置在series中\n      series: [\n        {\n          name: \"人数\",\n          // 图表类型，线图line 柱状图bar\n          type: \"bar\",\n          data: [2, 4, 23, 27, 31, 39],\n        },\n      ],\n    });\n  },\n  methods: {\n    draw(legend, xAxis, series) {\n      let myChart1 = this.$echarts.init(document.getElementById(\"main2\"));\n      let option = {\n        title: {\n          text: \"会话量\",\n        },\n        toolbar: {\n          trigger: \"axis\",\n        },\n        legend: {\n          data: legend,\n        },\n        xAxis: {\n          type: \"category\",\n          data: xAxis,\n        },\n        yAxis: {\n          type: \"value\",\n        },\n        series,\n      };\n      myChart1.setOption(option);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n// 图表中一定要给宽高 ， 如果不给宽高会出现代码不报错但是什么都没有\n.dataView {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  .el-card {\n    width: 50%;\n    #main1,\n    #main2 {\n      height: 500px;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataView.vue?vue&type=template&id=5c87b6b0&scoped=true&\"\nimport script from \"./DataView.vue?vue&type=script&lang=js&\"\nexport * from \"./DataView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DataView.vue?vue&type=style&index=0&id=5c87b6b0&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5c87b6b0\",\n  null\n  \n)\n\nexport default component.exports","//项目中大多数会把大多数接口请求封装成api来调用\nimport service from \"@/service\";\nimport qs from \"qs\";\n\n// 登录接口封装\nexport function login(data) {\n  return service({\n    method: \"post\",\n    url: \"/login\",\n    data: data,\n  });\n}\n// 学生列表查询接口封装\nexport function students(params) {\n  return service({\n    method: \"get\",\n    url: \"/students\",\n    params: params,\n  });\n}\n\n// 学生列表删除接口\nexport function studentDelete(id) {\n  return service({\n    method: \"delete\",\n    url: `/students/${id}`,\n  });\n}\n\n// 信息列表 新增接口\n// export function info(data) {\n//   data = qs.stringify(data);\n//   return service({\n//     method: \"post\",\n//     url: \"/info\",\n//     data: data,\n//   });\n// }\n\n// 信息列表新增和修改接口\n// 通过type进行控制\nexport function info(type, data) {\n  data = qs.stringify(data);\n  let obj = { method: type, url: \"/info\", data };\n  return service(obj);\n}\n\n// 信息列表 修改接口\n// export function changeInfo(data) {\n//   data = qs.stringify(data);\n//   return service({\n//     method: \"put\",\n//     url: \"/info\",\n//     data: data,\n//   });\n// }\n\n// 信息列表 查询接口\nexport function getInfo() {\n  return service({\n    method: \"get\",\n    url: \"/info\",\n  });\n}\n\n// 信息列表 删除接口\nexport function infoDelete(id) {\n  return service({\n    method: \"delete\",\n    url: `/info/${id}`,\n  });\n}\n\n// 作业列表 获取数据\nexport function works(params) {\n  return service({\n    method: \"get\",\n    url: \"/works\",\n    params,\n  });\n}\n\n// echart接口封装\nexport function dataView() {\n  return service({\n    method: \"get\",\n    url: \"dataview\",\n  });\n}\n\n// 封装地图接口\nexport function travel() {\n  return service({\n    method: \"get\",\n    url: \"/travel\",\n  });\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","attrs","staticRenderFns","name","data","created","dataView","then","res","console","log","status","legend","xAxis","series","draw","catch","err","mounted","myChart","$echarts","init","document","getElementById","setOption","title","text","tooltip","yAxis","type","methods","myChart1","option","toolbar","trigger","component","login","service","method","url","students","params","studentDelete","id","info","qs","obj","getInfo","infoDelete","travel"],"sourceRoot":""}